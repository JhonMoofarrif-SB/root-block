---
alwaysApply: false
version: "3.3.0"
date: "2025-01-16"
---
# Root Block Design System - CSS Standards for Cursor AI

## üéØ Contexto del Proyecto

**Design System moderno multi-marca** para aplicaciones web empresariales.
- 6 marcas: White Label, Jelpit, Davivienda, Cien Cuadras, Doctor Aki, Seguros Bol√≠var
- Temas: light/dark
- **IMPORTANTE:** Estas reglas son OBLIGATORIAS y NO negociables.

---

## üìã PRINCIPIOS FUNDAMENTALES

### SIEMPRE Usar:
- ‚úÖ CSS Nesting nativo con `&`
- ‚úÖ `@layer` para control de cascada (8 capas est√°ndar)
- ‚úÖ Logical Properties (inline-size, padding-inline, etc.) - RTL/LTR ready
- ‚úÖ `clamp()` para responsive fluido
- ‚úÖ Variables CSS con prefijo `--rb-`
- ‚úÖ Nomenclatura BEM con prefijo `rb-`
- ‚úÖ Accesibilidad completa (prefers-reduced-motion, prefers-contrast, focus-visible)

### NUNCA Usar:
- ‚ùå Physical properties (width, height, left, right, padding-left, margin-top, etc.)
- ‚ùå Media queries para tama√±os (usar clamp() en su lugar)
- ‚ùå Selectores sin prefijo `rb-`
- ‚ùå Variables sin prefijo `--rb-`
- ‚ùå Repetir selectores (usar nesting)
- ‚ùå `!important` (excepto en @layer utilities cuando es absolutamente necesario)

---

## üèóÔ∏è TEMPLATE OBLIGATORIO

```css
/**
 * [ComponentName] Component - Root Block Design System
 * - CSS Nesting nativo con &
 * - @layer para control de cascada
 * - Logical Properties (RTL/LTR)
 * - clamp() para responsive fluido
 * 
 * Uso: <elemento class="rb-[component] rb-[component]--[variant]">
 */

@layer reset, tokens, base, variants, sizes, modifiers, states, utilities;

/* ========================================
   RESET LAYER
   ======================================== */
@layer reset {
  .rb-[component] {
    all: unset;
    box-sizing: border-box;
  }
}

/* ========================================
   TOKENS LAYER - Variables CSS
   ======================================== */
@layer tokens {
  .rb-[component] {
    /* Colores BASE - Estados interactivos */
    --rb-[component]-bg-color: var(--rb-color-grayscale-white, #fff);
    --rb-[component]-bg-hover: var(--rb-color-grayscale-L400, #f0f0f0);
    --rb-[component]-bg-active: var(--rb-color-grayscale-L300, #e0e0e0);
    --rb-[component]-bg-disabled: var(--rb-color-grayscale-L300, #f5f5f5);
    --rb-[component]-bg-disabled-hover: var(--rb-color-grayscale-L300, #f5f5f5);

    --rb-[component]-text-color: var(--rb-color-grayscale-black, #000);
    --rb-[component]-text-hover: var(--rb-color-grayscale-black, #000);
    --rb-[component]-text-active: var(--rb-color-grayscale-black, #000);
    --rb-[component]-text-disabled: var(--rb-color-grayscale-base, #9b9b9b);
    --rb-[component]-text-disabled-hover: var(--rb-color-grayscale-base, #9b9b9b);

    --rb-[component]-border-color: var(--rb-color-grayscale-L200, #e0e0e0);
    --rb-[component]-border-hover: var(--rb-color-grayscale-L100, #d0d0d0);
    --rb-[component]-border-active: var(--rb-color-grayscale-base, #9b9b9b);
    --rb-[component]-border-disabled: var(--rb-color-grayscale-L300, #f5f5f5);
    --rb-[component]-border-disabled-hover: var(--rb-color-grayscale-L300, #f5f5f5);

    /* Espaciado - SIEMPRE con clamp() */
    --rb-[component]-padding-inline: clamp(0.8rem, 0.5rem + 1.5vw, 2rem);
    --rb-[component]-padding-block: clamp(0.4rem, 0.3rem + 0.5vw, 0.875rem);
    --rb-[component]-gap: clamp(0.25rem, 0.2rem + 0.3vw, 0.5rem);

    /* Tipograf√≠a - SIEMPRE con clamp() */
    --rb-[component]-font-family: var(--rb-typography-fontFamily, 'Roboto', sans-serif);
    --rb-[component]-font-size: clamp(0.875rem, 0.8rem + 0.3vw, 1rem);
    --rb-[component]-font-weight: 700;
    --rb-[component]-line-height: 1.2;

    /* Tama√±os - Logical properties */
    --rb-[component]-min-inline-size: clamp(80px, 15vw, 120px);
    --rb-[component]-min-block-size: clamp(36px, 8vw, 44px);

    /* Bordes */
    --rb-[component]-border-width: 1px;
    --rb-[component]-border-radius: clamp(1.5rem, 1.2rem + 1.5vw, 2.5rem);

    /* Sombras (opcional) */
    --rb-[component]-shadow: none;
    --rb-[component]-shadow-hover: none;
    --rb-[component]-shadow-active: none;

    /* Transiciones - NO incluir outline para evitar destellos en focus */
    --rb-[component]-transition: background-color 0.2s ease, color 0.2s ease, border-color 0.2s ease, box-shadow 0.2s ease, transform 0.2s ease;
  }
}

/* ========================================
   BASE LAYER - Estilos base
   ======================================== */
@layer base {
  .rb-[component] {
    /* Layout */
    display: block;
    position: relative;

    /* Spacing - SOLO Logical Properties */
    padding-inline: var(--rb-[component]-padding-inline);
    padding-block: var(--rb-[component]-padding-block);

    /* Typography */
    font-family: var(--rb-[component]-font-family);
    font-size: var(--rb-[component]-font-size);
    font-weight: var(--rb-[component]-font-weight);
    line-height: var(--rb-[component]-line-height);

    /* Appearance */
    background-color: var(--rb-[component]-bg-color);
    color: var(--rb-[component]-text-color);
    border: var(--rb-[component]-border-width) solid var(--rb-[component]-border-color);
    border-radius: var(--rb-[component]-border-radius);

    /* Animation */
    transition: var(--rb-[component]-transition);

    /* Nested Pseudo-classes - SIEMPRE usar & */
    &:hover:not(:disabled):not(.rb-[component]--disabled) {
      background-color: var(--rb-[component]-bg-hover);
      color: var(--rb-[component]-text-hover, var(--rb-[component]-text-color));
      border-color: var(--rb-[component]-border-hover, var(--rb-[component]-border-color));
      cursor: pointer;
    }

    &:active:not(:disabled):not(.rb-[component]--disabled) {
      background-color: var(--rb-[component]-bg-active);
      color: var(--rb-[component]-text-active, var(--rb-[component]-text-color));
      border-color: var(--rb-[component]-border-active, var(--rb-[component]-border-color));
      cursor: pointer;
    }

    &:focus-visible:not(:disabled):not(.rb-[component]--disabled) {
      outline: 3px solid var(--rb-color-secondary-L100);
      outline-offset: 2px;
    }

    &:disabled,
    &.rb-[component]--disabled {
      background-color: var(--rb-[component]-bg-disabled);
      color: var(--rb-[component]-text-disabled);
      border-color: var(--rb-[component]-border-disabled);
      cursor: not-allowed;
      box-shadow: none;
      outline: none;
    }

    /* Disabled hover - usar variables espec√≠ficas con fallback */
    &:disabled:hover,
    &.rb-[component]--disabled:hover {
      background-color: var(--rb-[component]-bg-disabled-hover, var(--rb-[component]-bg-disabled)) !important;
      color: var(--rb-[component]-text-disabled-hover, var(--rb-[component]-text-disabled)) !important;
      border-color: var(--rb-[component]-border-disabled-hover, var(--rb-[component]-border-disabled)) !important;
      cursor: not-allowed;
      box-shadow: none;
      outline: none;
    }

    /* Disabled focus - sin outline */
    &:disabled:focus,
    &:disabled:focus-visible,
    &.rb-[component]--disabled:focus,
    &.rb-[component]--disabled:focus-visible {
      outline: none;
    }
  }
}

/* ========================================
   VARIANTS LAYER
   ======================================== */
@layer variants {
  .rb-[component]--primary {
    --rb-[component]-bg-color: var(--rb-color-primary-base);
    --rb-[component]-text-color: var(--rb-color-grayscale-white);
  }

  .rb-[component]--secondary {
    --rb-[component]-bg-color: var(--rb-color-secondary-base);
    --rb-[component]-text-color: var(--rb-color-primary-base);
  }
}

/* ========================================
   SIZES LAYER
   ======================================== */
@layer sizes {
  .rb-[component]--small {
    --rb-[component]-font-size: clamp(0.75rem, 0.7rem + 0.2vw, 0.875rem);
    --rb-[component]-padding-inline: clamp(0.4rem, 0.3rem + 0.5vw, 0.8rem);
    --rb-[component]-padding-block: clamp(0.2rem, 0.15rem + 0.3vw, 0.4rem);
  }

  .rb-[component]--large {
    --rb-[component]-font-size: clamp(1rem, 0.9rem + 0.4vw, 1.25rem);
    --rb-[component]-padding-inline: clamp(0.8rem, 0.6rem + 1.5vw, 2rem);
    --rb-[component]-padding-block: clamp(0.4rem, 0.3rem + 0.8vw, 1rem);
  }
}

/* ========================================
   MODIFIERS LAYER
   ======================================== */
@layer modifiers {
  .rb-[component]--block {
    inline-size: 100%;
  }

  .rb-[component]--rounded {
    --rb-[component]-border-radius: clamp(12px, 1rem + 0.5vw, 20px);
  }
}

/* ========================================
   STATES LAYER
   ======================================== */
@layer states {
  .rb-[component]--loading {
    pointer-events: none;
    opacity: 0.7;
  }

  .rb-[component]--error {
    --rb-[component]-border-color: var(--rb-color-feedback-error-base);
  }

  .rb-[component]--success {
    --rb-[component]-border-color: var(--rb-color-feedback-success-base);
  }
}

/* ========================================
   UTILITIES LAYER (m√°xima prioridad)
   ======================================== */
@layer utilities {
  /* High contrast mode support - OBLIGATORIO */
  @media (prefers-contrast: high) {
    .rb-[component] {
      --rb-[component]-border-width: 2px;
    }
  }

  /* Reduced motion support - OBLIGATORIO */
  @media (prefers-reduced-motion: reduce) {
    .rb-[component] {
      --rb-[component]-transition: none;
      animation: none;
    }
  }

  /* Mobile styles si es necesario */
  @media (inline-size <= 640px) {
    .rb-[component] {
      /* mobile specific styles */
    }
  }
}
```

---

## üé® ESTADO DISABLED + HOVER (NUEVO EN v3.3.0)

### Concepto
Los componentes pueden mostrar **visual feedback** cuando el usuario pasa el mouse sobre un elemento deshabilitado, sin cambiar su funcionalidad.

### Variables Disponibles
```css
/* En @layer tokens */
--rb-[component]-bg-disabled: var(--rb-color-grayscale-L300); /* Sin hover */
--rb-[component]-bg-disabled-hover: var(--rb-color-grayscale-L200); /* Con hover */

--rb-[component]-text-disabled: var(--rb-color-grayscale-base);
--rb-[component]-text-disabled-hover: var(--rb-color-grayscale-L100);

--rb-[component]-border-disabled: var(--rb-color-grayscale-L300);
--rb-[component]-border-disabled-hover: var(--rb-color-grayscale-L200);
```

### Implementaci√≥n en BASE LAYER
```css
@layer base {
  .rb-[component] {
    &:disabled:hover,
    &.rb-[component]--disabled:hover {
      /* Usa -disabled-hover, fallback a -disabled si no est√° definido */
      background-color: var(--rb-[component]-bg-disabled-hover, var(--rb-[component]-bg-disabled)) !important;
      color: var(--rb-[component]-text-disabled-hover, var(--rb-[component]-text-disabled)) !important;
      border-color: var(--rb-[component]-border-disabled-hover, var(--rb-[component]-border-disabled)) !important;
      cursor: not-allowed;
      box-shadow: none;
      outline: none;
    }
  }
}
```

### Ejemplo de Uso - Brand Override
```css
@layer brand-overrides {
  [data-brand='seguros-bolivar'] .rb-button--primary.rb-button--fill {
    /* DISABLED: fondo gris claro */
    --rb-button-bg-disabled: var(--rb-color-grayscale-L300); /* #F5F5F5 */
    --rb-button-text-disabled: var(--rb-color-grayscale-base); /* #9B9B9B */
    
    /* DISABLED + HOVER: texto m√°s claro para feedback visual */
    --rb-button-bg-disabled-hover: var(--rb-color-grayscale-L300); /* #F5F5F5 mantiene */
    --rb-button-text-disabled-hover: var(--rb-color-grayscale-L100); /* #B9B9B9 m√°s claro */
  }
  
  [data-brand='seguros-bolivar'] .rb-button--primary.rb-button--text {
    /* DISABLED: transparente */
    --rb-button-bg-disabled: transparent;
    --rb-button-text-disabled: var(--rb-color-grayscale-base); /* #9B9B9B */
    
    /* DISABLED + HOVER: aparece fondo gris */
    --rb-button-bg-disabled-hover: var(--rb-color-grayscale-L300); /* #F5F5F5 aparece */
    --rb-button-text-disabled-hover: var(--rb-color-grayscale-base); /* #9B9B9B mantiene */
  }
}
```

### Casos de Uso Comunes

| Variante | Disabled | Disabled + Hover | Feedback Visual |
|----------|----------|------------------|-----------------|
| **STROKE** | `bg: transparent` | `bg: #E1E1E1` | Fondo aparece |
| **FILL** | `bg: #F5F5F5`, `text: #9B9B9B` | `bg: #F5F5F5`, `text: #B9B9B9` | Texto se aclara |
| **TEXT** | `bg: transparent`, `text: #9B9B9B` | `bg: #F5F5F5`, `text: #9B9B9B` | Fondo aparece |

### Beneficios
‚úÖ **UX mejorada:** Usuario sabe que el bot√≥n detecta hover pero est√° deshabilitado  
‚úÖ **Flexible:** Cada marca puede personalizar su feedback visual  
‚úÖ **Fallback autom√°tico:** Si no se define `-disabled-hover`, usa `-disabled`  
‚úÖ **Consistente:** Mismo patr√≥n para todos los componentes  

---

## üìè MAPEO DE PROPIEDADES (OBLIGATORIO)

**Cuando vayas a escribir una propiedad f√≠sica, DETENTE y usa su equivalente l√≥gico:**

| ‚ùå PROHIBIDO | ‚úÖ USAR SIEMPRE | Descripci√≥n |
|-------------|----------------|-------------|
| `width` | `inline-size` | Tama√±o horizontal |
| `height` | `block-size` | Tama√±o vertical |
| `min-width` | `min-inline-size` | M√≠nimo horizontal |
| `max-width` | `max-inline-size` | M√°ximo horizontal |
| `min-height` | `min-block-size` | M√≠nimo vertical |
| `max-height` | `max-block-size` | M√°ximo vertical |
| `padding-left` | `padding-inline-start` | Padding inicio |
| `padding-right` | `padding-inline-end` | Padding fin |
| `padding: X Y` | `padding-block: X; padding-inline: Y;` | Padding shorthand |
| `margin-left` | `margin-inline-start` | Margin inicio |
| `margin-right` | `margin-inline-end` | Margin fin |
| `left` | `inset-inline-start` | Posici√≥n inicio |
| `right` | `inset-inline-end` | Posici√≥n fin |
| `top` | `inset-block-start` | Posici√≥n arriba |
| `bottom` | `inset-block-end` | Posici√≥n abajo |
| `border-left` | `border-inline-start` | Borde inicio |
| `border-right` | `border-inline-end` | Borde fin |
| `border-top-left-radius` | `border-start-start-radius` | Radio esquina |

### Ejemplo de conversi√≥n:

```css
/* ‚ùå PROHIBIDO */
.rb-card {
  width: 300px;
  height: 200px;
  padding: 1rem 2rem;
  margin-left: 1rem;
  border-left: 2px solid red;
}

/* ‚úÖ CORRECTO */
.rb-card {
  inline-size: 300px;
  block-size: 200px;
  padding-block: 1rem;
  padding-inline: 2rem;
  margin-inline-start: 1rem;
  border-inline-start: 2px solid red;
}
```

---

## üé® RESPONSIVE CON clamp() (OBLIGATORIO)

**NUNCA usar media queries para tama√±os. SIEMPRE usar clamp():**

```css
/* ‚ùå PROHIBIDO */
font-size: 1rem;
@media (max-width: 768px) {
  font-size: 0.875rem;
}

/* ‚úÖ CORRECTO */
font-size: clamp(0.875rem, 0.8rem + 0.3vw, 1rem);
```

### Valores Comunes Predefinidos:

```css
/* Font sizes */
--rb-font-small:  clamp(0.75rem, 0.7rem + 0.2vw, 0.875rem);
--rb-font-medium: clamp(0.875rem, 0.8rem + 0.3vw, 1rem);
--rb-font-large:  clamp(1rem, 0.9rem + 0.4vw, 1.25rem);

/* Padding */
--rb-padding-small:  clamp(0.5rem, 0.3rem + 0.8vw, 1rem);
--rb-padding-medium: clamp(0.8rem, 0.5rem + 1.5vw, 2rem);

/* Border radius */
--rb-radius-small:  clamp(4px, 0.3rem + 0.3vw, 8px);
--rb-radius-medium: clamp(6px, 0.4rem + 0.5vw, 12px);

/* Gap */
--rb-gap-small:  clamp(0.25rem, 0.2rem + 0.3vw, 0.5rem);
--rb-gap-medium: clamp(0.5rem, 0.4rem + 0.5vw, 1rem);
```

---

## üé≠ CSS NESTING (OBLIGATORIO)

**SIEMPRE usar `&` para anidar. NUNCA repetir selectores.**

```css
/* ‚ùå PROHIBIDO - Repetir selector */
.rb-button {
  padding: 1rem;
}
.rb-button:hover {
  background: blue;
}
.rb-button--primary {
  color: red;
}

/* ‚úÖ CORRECTO - Usar & */
.rb-button {
  padding: 1rem;
  
  &:hover:not(:disabled) {
    background: blue;
  }
  
  &:focus-visible {
    outline: 3px solid var(--rb-color-primary-L100);
    outline-offset: 4px;
  }
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
  
  &--primary {
    --rb-button-bg: var(--rb-color-primary-base);
  }
  
  &--secondary {
    --rb-button-bg: var(--rb-color-secondary-base);
  }
}
```

**L√≠mite: M√°ximo 3 niveles de nesting**

---

## üìã NOMENCLATURA (OBLIGATORIO)

### Clases CSS - BEM con prefijo rb-

```css
/* ‚úÖ CORRECTO */
.rb-button                  /* Block */
.rb-button--primary         /* Block + Modifier */
.rb-button--small           /* Block + Size */
.rb-button--loading         /* Block + State */

/* ‚ùå PROHIBIDO */
.button                     /* Sin prefijo rb- */
.rb-button-primary          /* Falta -- */
.rb-button__icon            /* No usar __ en atoms */
.rbButton                   /* No camelCase */
```

### Variables CSS - SIEMPRE --rb-

```css
/* ‚úÖ CORRECTO */
--rb-button-bg-color
--rb-button-padding-inline
--rb-color-primary-base

/* ‚ùå PROHIBIDO */
--button-bg                 /* Sin prefijo rb- */
--rb-button-padding-left    /* Usar padding-inline */
--buttonBgColor             /* No camelCase */
```

---

## üèÜ @layer - CAPAS EST√ÅNDAR (OBLIGATORIO)

**Declarar SIEMPRE al inicio del archivo:**

```css
/* Para componentes simples (8 capas) */
@layer reset, tokens, base, variants, sizes, modifiers, states, utilities;

/* Para componentes con style-variants (9 capas) - como button */
@layer reset, tokens, base, variants, style-variants, sizes, modifiers, states, utilities;

/* Para componentes con icon-positions (10 capas) - como button */
@layer reset, tokens, base, variants, style-variants, brand-overrides, sizes, modifiers, icon-positions, states, utilities;
```

| Capa | Prioridad | Uso |
|------|-----------|-----|
| `reset` | 1 (m√°s baja) | `all: unset`, `box-sizing` |
| `tokens` | 2 | Variables CSS del componente |
| `base` | 3 | Estilos base y estructura |
| `variants` | 4 | primary, secondary, tertiary, error |
| `style-variants` | 5 (opcional) | stroke, fill, text |
| `brand-overrides` | 6 | **NUEVO**: Overrides espec√≠ficos por marca |
| `sizes` | 7 | small, medium, large |
| `modifiers` | 8 | square, circle, block |
| `icon-positions` | 9 (opcional) | icon-left, icon-right, icon-only |
| `states` | 10 | hover, focus, disabled, loading |
| `utilities` | 11 (m√°s alta) | media queries, accesibilidad |

**NUEVO: Layer `brand-overrides`**

El layer `brand-overrides` permite a las marcas sobrescribir variables CSS del componente base sin usar `!important`. Tiene prioridad sobre `variants` y `style-variants` pero menor que `utilities`.

**Ejemplo de uso:**

```css
@layer brand-overrides {
  [data-brand='seguros-bolivar'] .rb-button--primary {
    --rb-button-text-hover: var(--rb-color-primary-D100);
    --rb-button-text-active: var(--rb-color-primary-D100);
  }
}
```

**Para Brand Overrides:**

```css
@layer brand-overrides {
  [data-brand='davivienda'] .rb-button {
    --rb-button-bg-color: var(--rb-color-primary-base);
  }
}
```

---

## ‚ôø ACCESIBILIDAD (OBLIGATORIO)

**SIEMPRE incluir estos 4 elementos en TODOS los componentes:**

```css
@layer utilities {
  /* 1. Reducci√≥n de movimiento - OBLIGATORIO */
  @media (prefers-reduced-motion: reduce) {
    .rb-[component] {
      animation: none;
      transition: none;
    }
  }
  
  /* 2. Alto contraste - OBLIGATORIO */
  @media (prefers-contrast: high) {
    .rb-[component] {
      --rb-[component]-border-width: 2px;
      outline: 2px solid currentColor;
    }
  }
}

@layer base {
  .rb-[component] {
    /* 3. Focus visible - OBLIGATORIO */
    &:focus-visible {
      outline: 3px solid var(--rb-color-primary-L100);
      outline-offset: 4px;
    }
    
    /* 4. Estado disabled - OBLIGATORIO */
    &:disabled {
      cursor: not-allowed;
      opacity: 0.6;
      pointer-events: none;
    }
  }
}
```

---

## üîß CASOS ESPECIALES

### Animaciones (definir fuera de @layer)

```css
@keyframes rb-spinner {
  to { transform: rotate(360deg); }
}

@layer states {
  .rb-button--loading {
    &::after {
      animation: rb-spinner 0.6s linear infinite;
    }
  }
}
```

### Pseudo-elementos (siempre anidados con &)

```css
@layer base {
  .rb-component {
    &::before {
      content: '';
      position: absolute;
      inset-inline-start: 0;
      inset-block-start: 0;
    }
  }
}
```

---

## üìä ESTRUCTURA DE ARCHIVOS

```
packages/
‚îú‚îÄ‚îÄ atoms/src/
‚îÇ   ‚îú‚îÄ‚îÄ button.css          ‚Üê Componente principal
‚îÇ   ‚îú‚îÄ‚îÄ input.css
‚îÇ   ‚îî‚îÄ‚îÄ index.css           ‚Üê Solo @import
‚îÇ
‚îú‚îÄ‚îÄ brand-overrides/src/
‚îÇ   ‚îú‚îÄ‚îÄ davivienda/
‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ button.css      ‚Üê Override espec√≠fico
‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ index.css       ‚Üê Solo @import
‚îÇ   ‚îî‚îÄ‚îÄ seguros-bolivar/
‚îÇ       ‚îú‚îÄ‚îÄ button.css
‚îÇ       ‚îî‚îÄ‚îÄ index.css
```

---

## ‚úÖ CHECKLIST ANTES DE FINALIZAR

- [ ] ‚úÖ Declaraci√≥n de `@layer` correcta al inicio del archivo
- [ ] ‚úÖ Todas las clases tienen prefijo `rb-`
- [ ] ‚úÖ Todas las variables tienen prefijo `--rb-`
- [ ] ‚úÖ Usa CSS Nesting con `&` (no repites selectores)
- [ ] ‚úÖ Usa SOLO Logical Properties (inline-size, padding-inline, etc.)
- [ ] ‚úÖ NO usas physical properties (width, padding-left, etc.)
- [ ] ‚úÖ Usa `clamp()` para todos los tama√±os responsive
- [ ] ‚úÖ Define variables para todos los estados: default, hover, active, disabled, disabled-hover
- [ ] ‚úÖ Incluye `:hover:not(:disabled):not(.rb-[component]--disabled)`
- [ ] ‚úÖ Incluye `:active:not(:disabled):not(.rb-[component]--disabled)`
- [ ] ‚úÖ Incluye `:focus-visible` con outline visible (3px solid secondary-L100)
- [ ] ‚úÖ Incluye estado `:disabled` y clase `.rb-[component]--disabled`
- [ ] ‚úÖ Incluye `:disabled:hover` con variables `-disabled-hover` (fallback a `-disabled`)
- [ ] ‚úÖ Incluye `@media (prefers-reduced-motion: reduce)`
- [ ] ‚úÖ Incluye `@media (prefers-contrast: high)`
- [ ] ‚úÖ M√°ximo 3 niveles de nesting
- [ ] ‚úÖ Transiciones NO incluyen outline (evita destellos en focus)
- [ ] ‚úÖ `@keyframes` definidos fuera de `@layer`

---

## üöÄ WORKFLOW PARA CREAR COMPONENTE

1. Copiar template base de arriba
2. Reemplazar `[component]` con el nombre del componente
3. Definir variables en `@layer tokens`
4. Estilos base en `@layer base`
5. Variantes en `@layer variants`
6. Tama√±os en `@layer sizes`
7. Modifiers en `@layer modifiers`
8. Estados en `@layer states`
9. Accesibilidad en `@layer utilities`
10. Verificar checklist

---

## üìö EJEMPLOS DE REFERENCIA

- `packages/atoms/src/button.css` - Componente completo (gold standard)
- `packages/brand-overrides/src/seguros-bolivar/button.css` - Ejemplo de override con @layer brand-overrides
- Ver tambi√©n: `.cursor/rules/CSS_OVERRIDE_BRAND.mdc` - Gu√≠a espec√≠fica para brand overrides

---

## üéØ RECORDATORIOS FINALES

1. **NUNCA** uses physical properties (width, height, left, padding-left, etc.)
2. **SIEMPRE** usa `clamp()` para valores responsive
3. **SIEMPRE** usa CSS Nesting con `&`
4. **SIEMPRE** usa prefijos `--rb-` para variables CSS
5. **SIEMPRE** usa prefijos `rb-` para clases CSS
6. **SIEMPRE** incluye los 4 elementos de accesibilidad
7. **SIEMPRE** define variables para TODOS los estados (default, hover, active, disabled, disabled-hover)
8. **SIEMPRE** usa `:not(:disabled):not(.rb-[component]--disabled)` en hover y active
9. **SIEMPRE** incluye estado disabled con clase `.rb-[component]--disabled`
10. **SIEMPRE** incluye `:disabled:hover` con variables `-disabled-hover` (fallback a `-disabled` si no se define)
11. **SIEMPRE** usa `@layer` con las capas correctas seg√∫n el componente
12. **SIEMPRE** usa `@layer brand-overrides` para todos los overrides de marca
13. **SIEMPRE** usa `outline` con `secondary-L100` en focus-visible (NO primary-L100)
14. **NUNCA** incluyas `outline` en transiciones (evita destellos en focus)
15. **NUNCA** uses `!important` (excepto en @layer utilities cuando sea necesario)
16. **NUNCA** repitas selectores (usa nesting)
17. **NUNCA** definas `@keyframes` dentro de `@layer`

---

**√öltima actualizaci√≥n:** 2025-01-16  
**Versi√≥n:** 3.2.0 - Actualizado con @layer brand-overrides para overrides de marca
