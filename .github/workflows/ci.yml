# name: CI

# on:
#   push:
#     branches: [main, master, develop]
#   pull_request:
#     branches: [main, master, develop]

# jobs:
#   quality:
#     name: Code Quality
#     runs-on: ubuntu-latest
    
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
      
#       - name: Setup PNPM
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8
      
#       - name: Get PNPM store directory
#         id: pnpm-cache
#         shell: bash
#         run: |
#           echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
#       - name: Setup PNPM cache
#         uses: actions/cache@v3
#         with:
#           path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
#           key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-pnpm-store-
      
#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile
      
#       - name: Lint
#         run: pnpm lint
      
#       - name: Type check
#         run: pnpm exec tsc --noEmit
      
#       - name: Format check
#         run: pnpm exec prettier --check "**/*.{ts,tsx,js,jsx,json,css,md}"

#   build:
#     name: Build
#     runs-on: ubuntu-latest
#     needs: quality
    
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
      
#       - name: Setup PNPM
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8
      
#       - name: Get PNPM store directory
#         id: pnpm-cache
#         shell: bash
#         run: |
#           echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
#       - name: Setup PNPM cache
#         uses: actions/cache@v3
#         with:
#           path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
#           key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-pnpm-store-
      
#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile
      
#       - name: Build packages
#         run: pnpm build
      
#       - name: Build examples
#         run: pnpm build:examples
      
#       - name: Upload build artifacts
#         uses: actions/upload-artifact@v3
#         with:
#           name: build-output
#           path: |
#             packages/*/dist
#             examples/dist
#           retention-days: 7

#   test:
#     name: Test
#     runs-on: ubuntu-latest
#     needs: quality
    
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v4
      
#       - name: Setup Node.js
#         uses: actions/setup-node@v4
#         with:
#           node-version: '18'
      
#       - name: Setup PNPM
#         uses: pnpm/action-setup@v2
#         with:
#           version: 8
      
#       - name: Get PNPM store directory
#         id: pnpm-cache
#         shell: bash
#         run: |
#           echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      
#       - name: Setup PNPM cache
#         uses: actions/cache@v3
#         with:
#           path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
#           key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
#           restore-keys: |
#             ${{ runner.os }}-pnpm-store-
      
#       - name: Install dependencies
#         run: pnpm install --frozen-lockfile
      
#       - name: Run unit tests
#         run: pnpm test
      
#       - name: Install Playwright browsers
#         run: pnpm exec playwright install --with-deps chromium
      
#       - name: Run E2E tests
#         run: pnpm test:e2e
      
#       - name: Upload test results
#         if: always()
#         uses: actions/upload-artifact@v3
#         with:
#           name: test-results
#           path: |
#             coverage/
#             test-results/
#             playwright-report/
#           retention-days: 7

